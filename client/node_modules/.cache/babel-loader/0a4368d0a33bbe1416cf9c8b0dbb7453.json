{"ast":null,"code":"import { takeEvery, call, put } from \"@redux-saga/core/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired!\");\n  const collectionRef = firestore.collection(\"collections\");\n  yield put(fetchCollectionsStart());\n\n  try {\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      put(fetchCollectionsSuccess(collectionsMap));\n    });\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // try {\n  //   collectionRef.onSnapshot(async (snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   });\n  // } catch (error) {\n  //   dispatch(fetchCollectionsFailure(error.message));\n  // }\n\n}\nexport function* fetchCollectionsStartSaga() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/wellnaidyadrian/Visualstudio/neagoie/react/clothing-shop/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","fetchCollectionsStart","onSnapshot","snapshot","collectionsMap","error","message","fetchCollectionsStartSaga","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,0BAArC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMV,GAAG,CAACW,qBAAqB,EAAtB,CAAT;;AACA,MAAI;AACFF,IAAAA,aAAa,CAACG,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AACzC,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAb,MAAAA,GAAG,CAACI,uBAAuB,CAACU,cAAD,CAAxB,CAAH;AACD,KAHH;AAID,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACK,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GAZsC,CAcvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,yBAAV,GAAsC;AAC3C,QAAMnB,SAAS,CACbK,eAAe,CAACe,uBADH,EAEbZ,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"@redux-saga/core/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired!\");\n\n  const collectionRef = firestore.collection(\"collections\");\n  yield put(fetchCollectionsStart());\n  try {\n    collectionRef.onSnapshot(async (snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        put(fetchCollectionsSuccess(collectionsMap));\n      });\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n\n  // try {\n  //   collectionRef.onSnapshot(async (snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   });\n  // } catch (error) {\n  //   dispatch(fetchCollectionsFailure(error.message));\n  // }\n}\n\nexport function* fetchCollectionsStartSaga() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}