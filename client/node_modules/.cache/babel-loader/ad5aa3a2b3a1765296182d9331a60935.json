{"ast":null,"code":"import { takeEvery, call, put } from \"@redux-saga/core/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I'm fired!\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = call(convertCollectionsSnapshotToMap, snapshot);\n      put(fetchCollectionsSuccess(collectionsMap));\n    }); // const collectionsMap = yield call(\n    //   convertCollectionsSnapshotToMap,\n    //   snapshot\n    // );\n    // yield put(fetchCollectionsSuccess(collectionsMap))\n    // dispatch(fetchCollectionsStart());\n    // yield collectionRef.onSnapshot(async (snapshot) => {\n    //   const collectionsMap = call(convertCollectionsSnapshotToMap, snapshot);\n    //   put(fetchCollectionsSuccess(collectionsMap));\n    // });\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/wellnaidyadrian/Visualstudio/neagoie/react/clothing-shop/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","onSnapshot","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,0BAArC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,UAAd,CAAyB,MAAOD,QAAP,IAAoB;AAC9D,YAAME,cAAc,GAAGd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAA3B;AACAX,MAAAA,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAH;AACD,KAHkB,CAAvB,CAFE,CAMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAhBD,CAgBE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMlB,SAAS,CACbK,eAAe,CAACc,uBADH,EAEbX,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"@redux-saga/core/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I'm fired!\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.onSnapshot(async (snapshot) => {\n          const collectionsMap = call(convertCollectionsSnapshotToMap, snapshot);\n          put(fetchCollectionsSuccess(collectionsMap));\n        });\n    // const collectionsMap = yield call(\n    //   convertCollectionsSnapshotToMap,\n    //   snapshot\n    // );\n    // yield put(fetchCollectionsSuccess(collectionsMap))\n    // dispatch(fetchCollectionsStart());\n    // yield collectionRef.onSnapshot(async (snapshot) => {\n    //   const collectionsMap = call(convertCollectionsSnapshotToMap, snapshot);\n    //   put(fetchCollectionsSuccess(collectionsMap));\n    // });\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}