{"ast":null,"code":"var _jsxFileName = \"/Users/wellnaidyadrian/Visualstudio/neagoie/react/clothing-shop/src/components/with-auth/with-auth.component.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withAuth = (WrappedComponent, isAdmin = false) => {\n  class WithAuth extends Component {\n    constructor(...args) {\n      super(...args);\n\n      this.authCheck = ({\n        isAuth,\n        currentUser,\n        ...otherProps\n      }) => {\n        if (isAuth) {\n          const role = currentUser.role;\n\n          if (role === 1 && isAdmin) {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 18\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 16\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 16\n          }, this);\n        }\n      };\n    }\n\n    render() {\n      return this.authCheck();\n    }\n\n  }\n\n  const mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser,\n    isAuth: selectCurrentUser\n  });\n  return connect(mapStateToProps)(WithAuth);\n};\n\nexport default withAuth;","map":{"version":3,"sources":["/Users/wellnaidyadrian/Visualstudio/neagoie/react/clothing-shop/src/components/with-auth/with-auth.component.js"],"names":["React","Component","connect","Redirect","createStructuredSelector","selectCurrentUser","withAuth","WrappedComponent","isAdmin","WithAuth","authCheck","isAuth","currentUser","otherProps","role","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;;;AAEA,MAAMC,QAAQ,GAAG,CAACC,gBAAD,EAAmBC,OAAO,GAAG,KAA7B,KAAuC;AACtD,QAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;;AAAA,WAC/BS,SAD+B,GACnB,CAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,WAAV;AAAuB,WAAGC;AAA1B,OAAD,KAA4C;AACtD,YAAIF,MAAJ,EAAY;AACV,gBAAMG,IAAI,GAAGF,WAAW,CAACE,IAAzB;;AACA,cAAIA,IAAI,KAAK,CAAT,IAAcN,OAAlB,EAA2B;AACzB,gCAAO,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,8BAAO,QAAC,gBAAD,OAAsBK;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAND,MAMO;AACL,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAX8B;AAAA;;AAa/BE,IAAAA,MAAM,GAAG;AACP,aAAO,KAAKL,SAAL,EAAP;AACD;;AAf8B;;AAkBjC,QAAMM,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CQ,IAAAA,WAAW,EAAEP,iBADkC;AAE/CM,IAAAA,MAAM,EAAEN;AAFuC,GAAD,CAAhD;AAKA,SAAOH,OAAO,CAACc,eAAD,CAAP,CAAyBP,QAAzB,CAAP;AACD,CAzBD;;AA2BA,eAAeH,QAAf","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\n\nconst withAuth = (WrappedComponent, isAdmin = false) => {\n  class WithAuth extends Component {\n    authCheck = ({ isAuth, currentUser, ...otherProps }) => {\n      if (isAuth) {\n        const role = currentUser.role;\n        if (role === 1 && isAdmin) {\n          return <Redirect to=\"/dashboard\" />;\n        }\n        return <WrappedComponent {...otherProps} />;\n      } else {\n        return <Redirect to=\"/signin\" />;\n      }\n    };\n\n    render() {\n      return this.authCheck();\n    }\n  }\n\n  const mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser,\n    isAuth: selectCurrentUser,\n  });\n\n  return connect(mapStateToProps)(WithAuth);\n};\n\nexport default withAuth;\n"]},"metadata":{},"sourceType":"module"}