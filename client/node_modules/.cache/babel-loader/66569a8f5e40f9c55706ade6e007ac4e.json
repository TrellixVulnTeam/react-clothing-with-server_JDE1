{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport rootReducer from \"./root-reducer\";\nimport { fetchCollectionsAsync } from \"./shop/shop.sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [thunk, sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsAsync);\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/Users/wellnaidyadrian/Visualstudio/neagoie/react/clothing-shop/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","thunk","createSagaMiddleware","rootReducer","fetchCollectionsAsync","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACL,KAAD,EAAQI,cAAR,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AACPD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB;AACA,OAAO,MAAMS,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA9B;AAEP,eAAeA,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"@redux-saga/core\";\n\nimport rootReducer from \"./root-reducer\";\nimport { fetchCollectionsAsync } from \"./shop/shop.sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [thunk, sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsAsync);\nexport const persistor = persistStore(store);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}